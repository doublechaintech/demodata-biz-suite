<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

	<!-- Enable Annotation based Declarative Transaction Management -->

  <bean id="modelService" class="com.test.demodata.ModelService"/>
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
  	  <property name="poolName" value="demodata_connection_pool" />
  	  <property name="dataSourceClassName" value="${app.database.dataSourceClassName}"/>
  	  <property name="maximumPoolSize" value="10" />
  	  <property name="maxLifetime" value="60000" />
  	  <property name="idleTimeout" value="30000" />
  	  <property name="dataSourceProperties">
  	   <props>
  	     <prop key="url">${app.database.jdbcURL}</prop>
  	     <prop key="user">${app.database.username}</prop>
  	     <prop key="password">${app.database.password}</prop>
  	   </props>
  	  </property>
  	</bean>


	<!-- dbcp 2.6 https://commons.apache.org/proper/commons-dbcp/configuration.html
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="poolName" value="demodata_connection_pool" />
	  <property name="dataSourceClassName" value="${app.database.dataSourceClassName}"/>
	  <property name="maximumPoolSize" value="10" />
	  <property name="maxLifetime" value="60000" />
	  <property name="idleTimeout" value="30000" />
	  <property name="dataSourceProperties">
	   <props>
	     <prop key="url">${app.database.jdbcURL}</prop>
	     <prop key="user">${app.database.username}</prop>
	     <prop key="password">${app.database.password}</prop>
	     <prop key="prepStmtCacheSize">250</prop>
	     <prop key="prepStmtCacheSqlLimit">2048</prop>
	     <prop key="cachePrepStmts">true</prop>
	     <prop key="useServerPrepStmts">true</prop>
	   </props>
	  </property>
	</bean>
	-->

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	  <constructor-arg ref="hikariConfig" />
	</bean>


	<bean id="platformDAOBase" class="com.test.demodata.platform.PlatformJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" />
		<property name="imageDAO" ref="imageDAO" />
		
	</bean>
	<bean id="platformDAO" parent="platformDAOBase"></bean>
	

	<bean id="imageDAOBase" class="com.test.demodata.image.ImageJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="platformDAO" ref="platformDAO" />
	</bean>
	<bean id="imageDAO" parent="imageDAOBase"></bean>
	

	<bean id="userDomainDAOBase" class="com.test.demodata.userdomain.UserDomainJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" />
		<property name="userWhiteListDAO" ref="userWhiteListDAO" />
		
		<property name="secUserDAO" ref="secUserDAO" />
		
	</bean>
	<bean id="userDomainDAO" parent="userDomainDAOBase"></bean>
	

	<bean id="userWhiteListDAOBase" class="com.test.demodata.userwhitelist.UserWhiteListJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="userDomainDAO" ref="userDomainDAO" />
	</bean>
	<bean id="userWhiteListDAO" parent="userWhiteListDAOBase"></bean>
	

	<bean id="secUserDAOBase" class="com.test.demodata.secuser.SecUserJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="userDomainDAO" ref="userDomainDAO" />
		<property name="userAppDAO" ref="userAppDAO" />
		
		<property name="loginHistoryDAO" ref="loginHistoryDAO" />
		
		<property name="wechatWorkappIdentifyDAO" ref="wechatWorkappIdentifyDAO" />
		
		<property name="wechatMiniappIdentifyDAO" ref="wechatMiniappIdentifyDAO" />
		
	</bean>
	<bean id="secUserDAO" parent="secUserDAOBase"></bean>
	

	<bean id="userAppDAOBase" class="com.test.demodata.userapp.UserAppJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="secUserDAO" ref="secUserDAO" />
		<property name="quickLinkDAO" ref="quickLinkDAO" />
		
		<property name="listAccessDAO" ref="listAccessDAO" />
		
		<property name="objectAccessDAO" ref="objectAccessDAO" />
		
	</bean>
	<bean id="userAppDAO" parent="userAppDAOBase"></bean>
	

	<bean id="quickLinkDAOBase" class="com.test.demodata.quicklink.QuickLinkJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="userAppDAO" ref="userAppDAO" />
	</bean>
	<bean id="quickLinkDAO" parent="quickLinkDAOBase"></bean>
	

	<bean id="listAccessDAOBase" class="com.test.demodata.listaccess.ListAccessJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="userAppDAO" ref="userAppDAO" />
	</bean>
	<bean id="listAccessDAO" parent="listAccessDAOBase"></bean>
	

	<bean id="objectAccessDAOBase" class="com.test.demodata.objectaccess.ObjectAccessJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="userAppDAO" ref="userAppDAO" />
	</bean>
	<bean id="objectAccessDAO" parent="objectAccessDAOBase"></bean>
	

	<bean id="loginHistoryDAOBase" class="com.test.demodata.loginhistory.LoginHistoryJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="secUserDAO" ref="secUserDAO" />
	</bean>
	<bean id="loginHistoryDAO" parent="loginHistoryDAOBase"></bean>
	

	<bean id="genericFormDAOBase" class="com.test.demodata.genericform.GenericFormJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" />
		<property name="formMessageDAO" ref="formMessageDAO" />
		
		<property name="formFieldMessageDAO" ref="formFieldMessageDAO" />
		
		<property name="formFieldDAO" ref="formFieldDAO" />
		
		<property name="formActionDAO" ref="formActionDAO" />
		
	</bean>
	<bean id="genericFormDAO" parent="genericFormDAOBase"></bean>
	

	<bean id="formMessageDAOBase" class="com.test.demodata.formmessage.FormMessageJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="genericFormDAO" ref="genericFormDAO" />
	</bean>
	<bean id="formMessageDAO" parent="formMessageDAOBase"></bean>
	

	<bean id="formFieldMessageDAOBase" class="com.test.demodata.formfieldmessage.FormFieldMessageJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="genericFormDAO" ref="genericFormDAO" />
	</bean>
	<bean id="formFieldMessageDAO" parent="formFieldMessageDAOBase"></bean>
	

	<bean id="formFieldDAOBase" class="com.test.demodata.formfield.FormFieldJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="genericFormDAO" ref="genericFormDAO" />
	</bean>
	<bean id="formFieldDAO" parent="formFieldDAOBase"></bean>
	

	<bean id="formActionDAOBase" class="com.test.demodata.formaction.FormActionJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="genericFormDAO" ref="genericFormDAO" />
	</bean>
	<bean id="formActionDAO" parent="formActionDAOBase"></bean>
	

	<bean id="candidateContainerDAOBase" class="com.test.demodata.candidatecontainer.CandidateContainerJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" />
		<property name="candidateElementDAO" ref="candidateElementDAO" />
		
	</bean>
	<bean id="candidateContainerDAO" parent="candidateContainerDAOBase"></bean>
	

	<bean id="candidateElementDAOBase" class="com.test.demodata.candidateelement.CandidateElementJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="candidateContainerDAO" ref="candidateContainerDAO" />
	</bean>
	<bean id="candidateElementDAO" parent="candidateElementDAOBase"></bean>
	

	<bean id="wechatWorkappIdentifyDAOBase" class="com.test.demodata.wechatworkappidentify.WechatWorkappIdentifyJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="secUserDAO" ref="secUserDAO" />
	</bean>
	<bean id="wechatWorkappIdentifyDAO" parent="wechatWorkappIdentifyDAOBase"></bean>
	

	<bean id="wechatMiniappIdentifyDAOBase" class="com.test.demodata.wechatminiappidentify.WechatMiniappIdentifyJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" /><property name="secUserDAO" ref="secUserDAO" />
	</bean>
	<bean id="wechatMiniappIdentifyDAO" parent="wechatMiniappIdentifyDAOBase"></bean>
	

	<bean id="treeNodeDAOBase" class="com.test.demodata.treenode.TreeNodeJDBCTemplateDAO">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="treeNodeDAO" parent="treeNodeDAOBase"></bean>
	


	<bean id="DAOGroupBase" class="com.test.demodata.DAOGroup">
		<property name="platformDAO" ref="platformDAO"/>
		<property name="imageDAO" ref="imageDAO"/>
		<property name="userDomainDAO" ref="userDomainDAO"/>
		<property name="userWhiteListDAO" ref="userWhiteListDAO"/>
		<property name="secUserDAO" ref="secUserDAO"/>
		<property name="userAppDAO" ref="userAppDAO"/>
		<property name="quickLinkDAO" ref="quickLinkDAO"/>
		<property name="listAccessDAO" ref="listAccessDAO"/>
		<property name="objectAccessDAO" ref="objectAccessDAO"/>
		<property name="loginHistoryDAO" ref="loginHistoryDAO"/>
		<property name="genericFormDAO" ref="genericFormDAO"/>
		<property name="formMessageDAO" ref="formMessageDAO"/>
		<property name="formFieldMessageDAO" ref="formFieldMessageDAO"/>
		<property name="formFieldDAO" ref="formFieldDAO"/>
		<property name="formActionDAO" ref="formActionDAO"/>
		<property name="candidateContainerDAO" ref="candidateContainerDAO"/>
		<property name="candidateElementDAO" ref="candidateElementDAO"/>
		<property name="wechatWorkappIdentifyDAO" ref="wechatWorkappIdentifyDAO"/>
		<property name="wechatMiniappIdentifyDAO" ref="wechatMiniappIdentifyDAO"/>
		<property name="treeNodeDAO" ref="treeNodeDAO"/>
	</bean>
	<bean id="DAOGroup" parent="DAOGroupBase"></bean>
</beans>




<!--

	各种候选配置，可以选择你更为熟悉的类型
	Creating TransactionManager Bean, since JDBC we are creating of type
		DataSourceTransactionManager

		<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="poolName" value="mercatus_connection_pool" />
	  <property name="dataSourceClassName" value="com.mysql.cj.jdbc.MysqlDataSource"/>
	  <property name="maximumPoolSize" value="50" />
	  <property name="maxLifetime" value="60000" />
	  <property name="idleTimeout" value="30000" />
	  <property name="dataSourceProperties">
	   <props>
	     <prop key="url">${app.database.jdbcURL}</prop>
	     <prop key="user">${app.database.username}</prop>
	     <prop key="password">${app.database.password}</prop>
	     <prop key="prepStmtCacheSize">250</prop>
	     <prop key="prepStmtCacheSqlLimit">2048</prop>
	     <prop key="cachePrepStmts">true</prop>
	     <prop key="useServerPrepStmts">true</prop>
	   </props>
	  </property>
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close" >

		<property name="url" value="${app.database.jdbcURL}" />
		<property name="username" value="${app.database.username}" />
		<property name="password" value="${app.database.password}" />
		<property name="driverClassName" value="${app.database.driverClass}" />
		<property name="initialSize" value="${app.database.pool.initialSize}" />
		<property name="maxTotal" value="${app.database.pool.maxActive}" />

		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1 from sec_user_data" />
		<property name="removeAbandonedTimeout" value="55" />
		<property name="removeAbandonedOnBorrow" value="true"/>

	</bean>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close" >

		<property name="jdbcUrl" value="${app.database.jdbcURL}" />
		<property name="user" value="${app.database.username}" />
		<property name="password" value="${app.database.password}" />
		<property name="driverClass" value="${app.database.driverClass}" />

  		<property name="minPoolSize" value="10"/>
  		<property name="maxPoolSize" value="50"/>
  		<property name="acquireIncrement" value="1"/>
  		<property name="idleConnectionTestPeriod" value="1000"/>
  		<property name="maxStatements" value="250"/>
  		<property name="checkoutTimeout" value="60000"/>
  		<property name="initialPoolSize" value="10" />

	</bean>


	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	  <property name="poolName" value="mercatus_connection_pool" />
	  <property name="dataSourceClassName" value="${app.database.dataSourceClassName}"/>
	  <property name="maximumPoolSize" value="50" />
	  <property name="maxLifetime" value="60000" />
	  <property name="idleTimeout" value="30000" />
	  <property name="dataSourceProperties">
	   <props>
	     <prop key="url">${app.database.jdbcURL}</prop>
	     <prop key="user">${app.database.username}</prop>
	     <prop key="password">${app.database.password}</prop>
	     <prop key="prepStmtCacheSize">250</prop>
	     <prop key="prepStmtCacheSqlLimit">2048</prop>
	     <prop key="cachePrepStmts">true</prop>
	     <prop key="useServerPrepStmts">true</prop>
	   </props>
	  </property>
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
	  <constructor-arg ref="hikariConfig" />
	</bean>


-->









